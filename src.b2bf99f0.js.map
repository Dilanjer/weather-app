{"version":3,"sources":["js/SearchBar.js","js/weather.js","index.js"],"names":["SearchBar","selector","options","placeholder","menuSvg","searchSvg","$elem","document","querySelector","event","preventDefault","type","target","dataset","toggle","value","select","close","match","data","filter","item","regex","RegExp","$input","contry","length","setDropList","imgChange","search","matches","list","map","time","join","$dropList","innerHTML","inputLength","$searchIcon","src","clearSvg","onSelect","isOpen","open","classList","add","remove","removeEventListener","clickHandler","addEventListener","clear","onChange","contains","bind","Weather","render","claudSvg","weatherState","Math","round","temp","maxDayTemp","minDayTemp","city","api","key","base","query","contryNames","fetch","then","r","json","push","timezones","name","res","result","console","log","main","temp_max","temp_min","searchBar","weather","window","w"],"mappings":"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","file":"src.b2bf99f0.js","sourceRoot":"..\\src","sourcesContent":["import menuSvg from \"../img/search-bar/menu.svg\";\r\nimport searchSvg from \"../img/search-bar/search.svg\";\r\nimport arrowSvg from \"../img/search-bar/arrow.svg\";\r\nimport clearSvg from \"../img/search-bar/clear.svg\";\r\n\r\n\r\nexport class SearchBar {\r\n  constructor(selector, options) {\r\n    this.$elem = document.querySelector(selector);\r\n    this.options = options;\r\n\r\n    this.#render();\r\n    this.#setup();\r\n  }\r\n\r\n  #render() {\r\n    const { placeholder, data } = this.options;\r\n    this.$elem.classList.add(\"search\");\r\n    this.data = data;\r\n    this.$elem.innerHTML = this.#getTepmplate(placeholder);\r\n  }\r\n\r\n  #setup() {\r\n    const _this = this;\r\n    this.$input = this.$elem.querySelector(\"[data-type='input']\");\r\n    this.$searchIcon = this.$elem.querySelector(\"[data-type='input-icon']\");\r\n    this.$dropList = this.$elem.querySelector(\"[data-type='drop-list']\");\r\n\r\n    this.$elem.addEventListener(\"click\", this.clickHandler.bind(_this));\r\n    this.$searchIcon.addEventListener(\"click\", this.clear.bind(_this));\r\n    this.$input.addEventListener(\"input\", this.onChange.bind(_this));\r\n  }\r\n\r\n  #getTepmplate = (placeholder) => {\r\n    return `\r\n     <div class=\"search__bar\">\r\n     <div class=\"menu__icon\">\r\n       <img src=\"${menuSvg}\" alt=\"menu\">\r\n     </div>\r\n     <input placeholder=\"${placeholder ?? \"Search...\"}\" type=\"text\" class=\"search__input\" data-type=\"input\">\r\n     <div class=\"search__icon\">\r\n       <img src=\"${searchSvg}\" alt=\"\" data-type=\"input-icon\">\r\n     </div>\r\n     <div class=\"search__droplist\">\r\n       <ul data-type=\"drop-list\"></ul>\r\n     </div>\r\n   </div>\r\n   <div class=\"search__backdrop\" data-type=\"backdrop\"></div>\r\n     `\r\n  }\r\n\r\n  get isOpen() {\r\n    return this.$elem.classList.contains(\"open\");\r\n  }\r\n\r\n  get inputLength() {\r\n    return this.$input.value.length > 0;\r\n  }\r\n\r\n  clickHandler(event) {\r\n    event.preventDefault();\r\n    const { type } = event.target.dataset;\r\n    if (type === \"input\") {\r\n      this.toggle();\r\n    } else if (type === \"item\") {\r\n      const value = event.target.dataset.value;\r\n      this.select(value);\r\n    } else if (type === 'backdrop') {\r\n      this.close();\r\n    }\r\n\r\n  }\r\n\r\n  search() {\r\n    let match = this.data.filter(item => {\r\n      const regex = new RegExp(`${this.$input.value}`, 'gi');\r\n      return item.contry.match(regex);\r\n    });\r\n    if (this.$input.value.length === 0) match = [];\r\n\r\n    this.setDropList(match);\r\n  }\r\n\r\n  onChange() {\r\n    this.imgChange();\r\n    this.search()\r\n  }\r\n\r\n  setDropList(matches) {\r\n    const list = matches.map(match => {\r\n      return `<li data-type=\"item\" data-value=\"${match.contry}\">${match.contry} <span>${match.time}</span></li>`;\r\n    }).join(\"\");\r\n    this.$dropList.innerHTML = list;\r\n  }\r\n\r\n  clear() {\r\n    this.$input.value = \"\";\r\n    this.$dropList.innerHTML = \"\";\r\n    this.close();\r\n    this.imgChange();\r\n  }\r\n\r\n  imgChange() {\r\n    this.inputLength ? this.$searchIcon.src = clearSvg : this.$searchIcon.src = searchSvg;\r\n  }\r\n\r\n  select(value) {\r\n    this.$input.value = value;\r\n    this.options.onSelect ? this.options.onSelect(this.$input.value) : null;\r\n    this.close();\r\n  }\r\n\r\n  toggle() {\r\n    this.isOpen ? this.close() : this.open();\r\n  }\r\n\r\n  open() {\r\n    this.$elem.classList.add(\"open\");\r\n  }\r\n\r\n  close() {\r\n    this.$elem.classList.remove(\"open\");\r\n  }\r\n\r\n  destroy() {\r\n    this.$elem.removeEventListener(\"click\", this.clickHandler);\r\n    this.$searchIcon.addEventListener(\"click\", this.clear);\r\n    this.$input.addEventListener(\"input\", this.onChange);\r\n    this.$elem.innerHTML = \"\";\r\n  }\r\n}","import claudSvg from \"../img/weather/claud.svg\"\r\n\r\nexport class Weather {\r\n  constructor(selector, options) {\r\n    this.$elem = document.querySelector(selector);\r\n    this.options = options;\r\n\r\n    this.render();\r\n  }\r\n\r\n  #getTemplate() {\r\n    return `\r\n      <div class=\"container\">\r\n        <div class=\"weather__inner\">\r\n          <div class=\"weather__main\">\r\n            <div class=\"weather__info\">\r\n              <img src=\"${claudSvg}\" alt=\"\">\r\n              <span>${this.options.weatherState}</span>\r\n            </div>\r\n            <div class=\"weather__temp\">\r\n              ${Math.round(this.options.temp)}°\r\n            </div>\r\n          </div>\r\n          <div class=\"weather__temps\">\r\n            <div class=\"weather__maxtemp\">${Math.round(this.options.maxDayTemp)} ℃</div>\r\n            <div class=\"weather__mintemp\">${Math.round(this.options.minDayTemp)} ℃</div>\r\n          </div>\r\n        \r\n      </div>\r\n    `\r\n  }\r\n\r\n  render() {\r\n    this.$elem.classList.add(\"weather\");\r\n    this.$elem.innerHTML = this.#getTemplate();\r\n  }\r\n}","// styles\r\nimport \"./styles/index.scss\";\r\n\r\nimport { SearchBar } from \"./js/SearchBar\";\r\nimport { Weather } from \"./js/weather\";\r\nlet city = [];\r\nconst api = {\r\n  key: \"9aef9693416309f4a4e39552163db20f\",\r\n  base: \"http://api.openweathermap.org/data/2.5/\"\r\n};\r\nlet query = \"Armenia\";\r\n\r\nconst contryNames = () => {\r\n  const res = fetch(\"https://restcountries.eu/rest/v2/all\")\r\n    .then((r) => {\r\n      return r.json();\r\n    }).then(data => {\r\n      data.map(item => city.push({ time: item.timezones[0], contry: item.name }));\r\n    });\r\n}\r\nconst search = () => {\r\n  fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n    .then(res => res.json())\r\n    .then(result => {\r\n      console.log(result);\r\n      const weather = new Weather(\"#weather\", {\r\n        weatherState: \"Cloud\",\r\n        temp: result.main.temp,\r\n        maxDayTemp: result.main.temp_max,\r\n        minDayTemp: result.main.temp_min,\r\n      });\r\n    });\r\n}\r\ncontryNames();\r\n\r\nconst searchBar = new SearchBar(\"#search\", {\r\n  placeholder: \"Search your country...\",\r\n  data: city,\r\n  onSelect(item) {\r\n    query = item;\r\n    search();\r\n    weather.render();\r\n  }\r\n});\r\nconst weather = new Weather(\"#weather\", {\r\n  weatherState: \"Cloud\",\r\n  temp: 0,\r\n  maxDayTemp: 0,\r\n  minDayTemp: 0,\r\n});\r\n\r\n\r\nwindow.w = weather;"]}